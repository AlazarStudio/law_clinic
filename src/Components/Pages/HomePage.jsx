import React, { useEffect, useState } from "react";
import {
  Box,
  Typography,
  Button,
  Grid,
  Card,
  CardContent
} from "@mui/material";
import { useNavigate } from "react-router-dom";
import { useAuth } from "../../AuthContext";

const HomePage = () => {
  const { user } = useAuth();
  const navigate = useNavigate();
  const [contracts, setContracts] = useState([]);

  useEffect(() => {
    const fetchContracts = async () => {
      if (!user) return;
      const res = await fetch(`http://localhost:5000/contracts?userId=${user.id}`);
      const data = await res.json();
      setContracts(
        data.sort((a, b) => new Date(a.endDate || "2100-01-01") - new Date(b.endDate || "2100-01-01"))
      );
    };

    fetchContracts();
  }, [user]);

  const totalContracts = contracts.length;
  const signedContracts = contracts.filter(c => c.status === "–ü–æ–¥–ø–∏—Å–∞–Ω").length;
  const pendingContracts = contracts.filter(c => c.status !== "–ü–æ–¥–ø–∏—Å–∞–Ω").length;

  const today = new Date();

  const expiringContracts = contracts.filter(contract => {
    if (!contract.endDate) return false;
    const end = new Date(contract.endDate);
    const diff = (end - today) / (1000 * 60 * 60 * 24);
    return diff >= 0 && diff <= 7;
  });

  const overdueContracts = contracts.filter(contract => {
    if (!contract.endDate) return false;
    const end = new Date(contract.endDate);
    return end < today;
  });

  return (
    <Box p={3}>
      <Typography variant="h4" gutterBottom>
        {user ? `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${user.name}!` : "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É"}
      </Typography>

      {/* üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <Grid container spacing={3}>
        <Grid item xs={12} md={4}>
          <Card>
            <CardContent>
              <Typography variant="h6">–í—Å–µ–≥–æ –¥–æ–≥–æ–≤–æ—Ä–æ–≤</Typography>
              <Typography variant="h4">{totalContracts}</Typography>
            </CardContent>
          </Card>
        </Grid>
        <Grid item xs={12} md={4}>
          <Card>
            <CardContent>
              <Typography variant="h6">–ü–æ–¥–ø–∏—Å–∞–Ω–æ</Typography>
              <Typography variant="h4">{signedContracts}</Typography>
            </CardContent>
          </Card>
        </Grid>
        <Grid item xs={12} md={4}>
          <Card>
            <CardContent>
              <Typography variant="h6">–ù–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–∏</Typography>
              <Typography variant="h4">{pendingContracts}</Typography>
            </CardContent>
          </Card>
        </Grid>
      </Grid>

      {/* ‚è∞ –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –¥–æ–≥–æ–≤–æ—Ä—ã */}
      {overdueContracts.length > 0 && (
        <Box mt={4}>
          <Typography variant="h5" gutterBottom>–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –¥–æ–≥–æ–≤–æ—Ä—ã</Typography>
          {overdueContracts.map((contract, index) => (
            <Card key={index} sx={{ mb: 1, backgroundColor: "#ffe5e5" }}>
              <CardContent>
                <Typography variant="h6">{contract.title}</Typography>
                <Typography variant="body2">
                  –ò—Å—Ç—ë–∫: {contract.endDate} | –°—Ç–∞—Ç—É—Å: {contract.status}
                </Typography>
              </CardContent>
            </Card>
          ))}
        </Box>
      )}

      {/* ‚è≥ –ò—Å—Ç–µ–∫–∞—é—â–∏–µ –¥–æ–≥–æ–≤–æ—Ä—ã */}
      {expiringContracts.length > 0 && (
        <Box mt={4}>
          <Typography variant="h5" gutterBottom>–ò—Å—Ç–µ–∫–∞—é—â–∏–µ –¥–æ–≥–æ–≤–æ—Ä—ã (–≤ —Ç–µ—á–µ–Ω–∏–µ 7 –¥–Ω–µ–π)</Typography>
          {expiringContracts.map((contract, index) => (
            <Card key={index} sx={{ mb: 1, backgroundColor: "#fffde7" }}>
              <CardContent>
                <Typography variant="h6">{contract.title}</Typography>
                <Typography variant="body2">
                  –ò—Å—Ç–µ–∫–∞–µ—Ç: {contract.endDate} | –°—Ç–∞—Ç—É—Å: {contract.status}
                </Typography>
              </CardContent>
            </Card>
          ))}
        </Box>
      )}

      {/* üïì –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è */}
      <Box mt={4}>
        <Typography variant="h5" gutterBottom>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è</Typography>
        {contracts.slice(0, 5).map((contract, index) => (
          <Card key={index} sx={{ mb: 1 }}>
            <CardContent>
              <Typography variant="h6">{contract.title}</Typography>
              <Typography variant="body2">–°—Ç–∞—Ç—É—Å: {contract.status} | –î–∞—Ç–∞: {contract.date}</Typography>
            </CardContent>
          </Card>
        ))}
      </Box>

      {/* üîó –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <Box mt={4} display="flex" gap={2}>
        <Button variant="contained" color="primary" onClick={() => navigate("/contracts")}>
          –ü–µ—Ä–µ–π—Ç–∏ –∫ –¥–æ–≥–æ–≤–æ—Ä–∞–º
        </Button>
        <Button variant="outlined" onClick={() => navigate("/profile")}>
          –ü—Ä–æ—Ñ–∏–ª—å
        </Button>
      </Box>
    </Box>
  );
};

export default HomePage;
